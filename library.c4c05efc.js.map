{"mappings":"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","sources":["src/js/header/library-header.js","src/js/pagination/paginationLibrary.js","src/js/templates/renderMarkupLibrary.js","src/js/mainModal/libraryModal.js"],"sourcesContent":["\nconst btnList = document.querySelector(\".header-buttonlist\")\nconst watchedBtn = document.querySelector(\".js-watched\")\nconst queueBtn = document.querySelector(\".js-queue\")\n\nbtnList.addEventListener(\"click\", onBtnClick)\n\nfunction onBtnClick(event){\n    if(event.target.nodeName !== \"BUTTON\"){\n        return\n    }\n    event.target.classList.add(\"current--btn\")\n    if(event.target.classList.contains(\"js-watched\")){\n        queueBtn.classList.remove(\"current--btn\")\n    }\n    if(event.target.classList.contains(\"js-queue\")){\n        watchedBtn.classList.remove(\"current--btn\")\n    }\n}\nexport { onBtnClick }\n\n","export { onClickEvt };\nimport { pagination } from './pagination';\n\n// const paginationLibraryContainer = document.querySelector(\n//   '.page__list-library'\n// );\n\nfunction onClickEvt(event) {\n  const WATCHED_KEY = localStorage.getItem('Watched');\n  console.log(WATCHED_KEY);\n  if (event.target.nodeName !== 'A') {\n    return;\n  }\n  if (event.target.classList.contains('page__arrow--left')) {\n    getTrendData((globalCurrentPage -= 1)).then(data => {\n      localStorage.setItem(CURRENT_FILMS_KEY, JSON.stringify(data.results));\n      filmGallery.innerHTML = '';\n      filmGallery.insertAdjacentHTML('beforeend', renderMarkup(data));\n      hideSpinner();\n      pagination(data.page, data.total_pages);\n    });\n    return;\n  }\n  if (event.target.classList.contains('page__arrow--right')) {\n    if (valueFromInput) {\n      fetchMovieSearch(valueFromInput, (globalCurrentPage += 1)).then(data => {\n        localStorage.setItem(CURRENT_FILMS_KEY, JSON.stringify(data.results));\n        filmGallery.innerHTML = '';\n        filmGallery.insertAdjacentHTML('beforeend', renderMarkup(data));\n        hideSpinner();\n        pagination(data.page, data.total_pages);\n      });\n      return;\n    }\n    getTrendData((globalCurrentPage += 1)).then(data => {\n      localStorage.setItem(CURRENT_FILMS_KEY, JSON.stringify(data.results));\n      filmGallery.innerHTML = '';\n      filmGallery.insertAdjacentHTML('beforeend', renderMarkup(data));\n      hideSpinner();\n      pagination(data.page, data.total_pages);\n    });\n    return;\n  }\n  if (event.target.textContent === '...') {\n    return;\n  }\n  const page = event.target.textContent;\n\n  if (valueFromInput) {\n    fetchMovieSearch(valueFromInput, page).then(data => {\n      console.log(data);\n      localStorage.setItem(CURRENT_FILMS_KEY, JSON.stringify(data.results));\n      filmGallery.innerHTML = '';\n      filmGallery.insertAdjacentHTML('beforeend', renderMarkup(data));\n      hideSpinner();\n      pagination(data.page, data.total_pages);\n    });\n    return;\n  } else {\n    getTrendData(page).then(data => {\n      localStorage.setItem(CURRENT_FILMS_KEY, JSON.stringify(data.results));\n      filmGallery.innerHTML = '';\n      filmGallery.insertAdjacentHTML('beforeend', renderMarkup(data));\n      hideSpinner();\n      pagination(data.page, data.total_pages);\n    });\n    return;\n  }\n}\n","import { onClickEvt } from '../pagination/paginationLibrary';\nimport { matchGenresById } from '../findGenres/findGenres';\n// import { pagination } from '../pagination/pagination';\n\n\nexport const myLibraryContainer = document.querySelector('.film-myLibrary__list');\nconst headerButtonlist = document.querySelector('.header-buttonlist');\n\nexport let filmKey = 'Watched';\n\nconst savedFilms = localStorage.getItem(filmKey);\nconst parsedFilms = JSON.parse(savedFilms);\nmyLibraryContainer.innerHTML = '';\nrenderMarkupLibrary(parsedFilms)\n\nheaderButtonlist.addEventListener('click', getFilmsKey);\nfunction getFilmsKey(evt) {\n  if(evt.target.nodeName !== \"BUTTON\"){\n      return\n    }\n  if (evt.target.classList.contains('js-watched')) {\n    filmKey = 'Watched'\n    const savedFilms = localStorage.getItem(filmKey);\n    const parsedFilms = JSON.parse(savedFilms);\n    myLibraryContainer.innerHTML = '';\n     renderMarkupLibrary(parsedFilms)\n  }\n  if (evt.target.classList.contains('js-queue')) {\n    filmKey = 'Queue'\n     console.log(filmKey);\n     const savedFilms = localStorage.getItem(filmKey);\n    const parsedFilms = JSON.parse(savedFilms);\n    myLibraryContainer.innerHTML = '';\n    renderMarkupLibrary(parsedFilms);\n  }\n}\n\n// console.log(parsedFilms); // settings object\n\nexport function renderMarkupLibrary(parsedFilms) {\n  console.log(parsedFilms);\n  const markup = parsedFilms\n  .map(\n    ({\n      title,\n        name,\n        id,\n        poster_path,\n        vote_average,\n        release_date,\n        genre_ids,\n        \n      }) => {\n        let POSTER_IMG_URL = '';\n        if (poster_path) {\n          POSTER_IMG_URL = 'https://image.tmdb.org/t/p/w500' + poster_path;\n        } else {\n          POSTER_IMG_URL =\n          'https://img.freepik.com/free-vector/glitch-error-404-page_23-2148105404.jpg?w=1000';\n        }\n        return `<li class=\"film-gallery__item\" id=\"${id}\">\n        <div class=\"film-gallery__image-wrapper\">\n        <img class=\"film-gallery__image\" src=\"${POSTER_IMG_URL}\"\n        alt=\"${title || name}\" width =\"394\" height =\"336\"/>\n        </div>\n        <div class=\"film-gallery__info-wrapper\">\n        <h3 class=\"film-gallery__name\">${name || title}</h3>\n        <p class=\"film-gallery__info\">\n        <span class=\"film-gallery__info-genres\">\n        ${matchGenresById(genre_ids) || 'No info'}</span>\n        |\n        <span class=\"film-gallery__info-year\">${\n          release_date ? release_date.slice(0, 4) : 'No info'\n                      }</span>\n                      <span class=\"film-gallery__info-rang\">${\n                        vote_average || 'No info'\n                      }</span>\n                      </p>\n                      </div>\n                      </li>`;\n                    }\n                    )\n                    .join('');\n                    // pagination(data.page, data.total_pages);\n                    // return markup;\n                    myLibraryContainer.insertAdjacentHTML('beforeend', markup);\n                  }\n\n\n\n","import { renderMarkupModal } from \"./renderMarkupModal\"\nimport { filmKey, renderMarkupLibrary, myLibraryContainer } from \"../templates/renderMarkupLibrary\"\nlet CURRENT_STORAGE\nconst filmList = document.querySelector(\".film-myLibrary__list\")\n\nconst modal = document.querySelector('[data-main-modal]');\nconst closeModalBtn = document.querySelector('[data-modal-main-close]');\nconst modalContainer = document.querySelector('.main-modal__container');\nconst body = document.querySelector('body');\nconst backdrop = document.querySelector('.main-modal__backdrop');\n\n// let watchedBtnL\n// let queueBtnL\nlet currFilm\nfilmList.addEventListener(\"click\", onFilmClick)\n\nfunction onFilmClick(event){\n    console.log(1)\n    if(!event.target.closest(\".film-gallery__item\")){\n        return\n    }\n    modal.classList.remove('is-hidden');\n    body.classList.add('overflow');\n    CURRENT_STORAGE = filmKey\n    const  {id}  = event.target.closest(\".film-gallery__item\")\n    const allFilms  = JSON.parse(localStorage.getItem(CURRENT_STORAGE))\n\n    currFilm = allFilms.find(elem => elem.id.toString() === id)\n    \n    modalContainer.innerHTML= renderMarkupModal(currFilm)\n\n    closeModalBtn.addEventListener('click', closeToggleModal);\n    document.addEventListener('click', clickOverlay);\n    let watchedObj = []\n    let queueObj = []\n    watchedBtnL = document.querySelector(\".main-modal__buttons--watched\")\n    watchedBtnL.textContent = \"Remove in watched\"\n    watchedBtnL.classList.add(\"added\")\n\n    queueBtnL = document.querySelector(\".main-modal__buttons--queue\")\n    queueBtnL.textContent = \"Remove in queue\"\n    queueBtnL.classList.add(\"added\")\n    // if(CURRENT_STORAGE === \"Watched\"){\n    //   queueBtnL.setAttribute(\"disabled\")\n    // }\n    // if(CURRENT_STORAGE === \"Queue\"){\n    //   watchedBtnL.setAttribute(\"disabled\")\n    // }\n    if (!localStorage.getItem('Watched').includes(currFilm.id)) {\n      watchedBtnL.textContent = 'Add to watched';\n      watchedBtnL.classList.remove('added');\n    }\n    if (!localStorage.getItem('Queue').includes(currFilm.id)) {\n      queueBtnL.textContent = 'Add to queue';\n      queueBtnL.classList.remove('added');\n    }\n\n    const modalBtnList = document.querySelector(\".main-modal__buttons\")\n    modalBtnList.addEventListener(\"click\", onBtnClickInModalLib)\n\n}\n\n\nfunction esc(key) {\n    if (key.code === 'Escape') {\n      closeToggleModal();\n    }\n}\n  \nfunction closeToggleModal() {\n    modal.classList.add('is-hidden');\n    body.classList.remove('overflow');\n    // modalContainer.innerHTML = '';\n}\n  \nfunction clickOverlay(overLay) {\n    const isContain = overLay.target.classList.contains('main-modal__backdrop');\n    if (isContain) {\n      closeToggleModal();\n    }\n}\n\n\nfunction onBtnClickInModalLib(event){\n    if(event.target.nodeName !== \"BUTTON\"){\n        return\n    }\n\n    if(event.target.classList.contains(\"main-modal__buttons--watched\")){\n        if(localStorage.getItem(\"Watched\")){\n          watchedObj = JSON.parse(localStorage.getItem(\"Watched\"))\n        }\n  \n        if(event.target.classList.contains(\"added\")){\n          const idx = watchedObj.findIndex(elem => elem.id === currFilm.id)\n          watchedObj.splice(idx, 1)\n          localStorage.setItem(\"Watched\", JSON.stringify(watchedObj))\n          watchedBtnL.textContent = \"Add to watched\"\n          watchedBtnL.classList.remove(\"added\")\n          myLibraryContainer.innerHTML=\"\"\n          renderMarkupLibrary( JSON.parse(localStorage.getItem(\"Watched\")))\n          closeToggleModal()\n          return\n        }\n        watchedObj.push(currFilm)\n        localStorage.setItem(\"Watched\", JSON.stringify(watchedObj))\n        watchedBtnL.textContent = \"Remove in watched\"\n        watchedBtnL.classList.add(\"added\")\n    }\n\n    if(event.target.classList.contains(\"main-modal__buttons--queue\")){\n        if(localStorage.getItem(\"Queue\")){\n          queueObj = JSON.parse(localStorage.getItem(\"Queue\"))\n        }\n\n        if(event.target.classList.contains(\"added\")){\n          const idx = queueObj.findIndex(elem => elem.id === currFilm.id)\n          queueObj.splice(idx, 1)\n          localStorage.setItem(\"Queue\", JSON.stringify(queueObj))\n          queueBtnL.textContent = \"Add to queue\"\n          queueBtnL.classList.remove(\"added\")\n          myLibraryContainer.innerHTML=\"\"\n          renderMarkupLibrary( JSON.parse(localStorage.getItem(\"Queue\")))\n          closeToggleModal()\n          return\n        }\n        queueObj.push(currFilm)\n        localStorage.setItem(\"Queue\", JSON.stringify(queueObj))\n        queueBtnL.textContent = \"Remove in queue\"\n        queueBtnL.classList.add(\"added\")\n    }\n}"],"names":["$1efa4ff0918d4798$var$btnList","document","querySelector","$1efa4ff0918d4798$var$watchedBtn","$1efa4ff0918d4798$var$queueBtn","addEventListener","event","target","nodeName","classList","add","contains","remove","parcelRequire","$732f8c5d49c8711b$export$1daefcb9b7d48ae","$732f8c5d49c8711b$var$headerButtonlist","$732f8c5d49c8711b$export$63c86cadbd015884","$732f8c5d49c8711b$var$savedFilms","localStorage","getItem","$732f8c5d49c8711b$var$parsedFilms","JSON","parse","$732f8c5d49c8711b$export$ebd406d59fee41e7","parsedFilms3","console","log","markup","map","param","title","name","id","poster_path","vote_average","release_date","genre_ids","POSTER_IMG_URL","concat","$5m7Gj","matchGenresById","slice","join","insertAdjacentHTML","innerHTML","evt","savedFilms2","parsedFilms2","savedFilms1","parsedFilms1","$2a2ce3fe0165a2e3$var$CURRENT_STORAGE","$2a2ce3fe0165a2e3$var$currFilm","$9zkr1","$2a2ce3fe0165a2e3$var$filmList","$2a2ce3fe0165a2e3$var$modal","$2a2ce3fe0165a2e3$var$closeModalBtn","$2a2ce3fe0165a2e3$var$modalContainer","$2a2ce3fe0165a2e3$var$body","$2a2ce3fe0165a2e3$var$closeToggleModal","$2a2ce3fe0165a2e3$var$clickOverlay","overLay","$2a2ce3fe0165a2e3$var$onBtnClickInModalLib","watchedObj","idx","findIndex","elem","splice","setItem","stringify","watchedBtnL","textContent","push","queueObj","idx1","queueBtnL","closest","allFilms","find","toString","renderMarkupModal","includes"],"version":3,"file":"library.c4c05efc.js.map"}